var N=null,E="",T="t",U="u",searchIndex={};
var R=["application","button","mief::elements","The ball used for playing.","on_button_pressed","Handle button press events.","on_button_released","Handle button release events.","on_render","context","on_resize","on_update","updateargs","ballstatus","position","The player's position on the field.","change_speed","movement","scoreboard","mief::execution_flow","Application","BallStatus","Movement","FieldSide","Scoreboard","TextAlignment"];

searchIndex["mief"]={"doc":"This is the main module of Mief, the Pong clone.","i":[[5,"main","mief","Run Mief.",N,[[]]],[0,R[0],E,"The highest abstraction of the application logic,…",N,N],[3,R[20],"mief::application","The manager of the application logic.",N,N],[12,"assets",E,"Path to the folder containing the assets.",0,N],[12,"window",E,"The application window.",0,N],[12,"field",E,"The playing field.",0,N],[12,R[18],E,"The scoreboard.",0,N],[12,"fps_counter",E,"The FPS counter.",0,N],[17,"OPENGL",E,"The OpenGL version.",N,N],[17,"SCOREBOARD_HEIGHT",E,"The (currently) fixed height of the scoreboard.",N,N],[11,"new",E,"Initialize a new application.",0,[[],[[R[0]],["error"],["result",[R[0],"error"]]]]],[11,"on_button_change",E,"Handle button events.",0,[[["self"],["buttonargs"]]]],[11,R[4],E,R[5],0,[[["self"],[R[1]]]]],[11,R[6],E,R[7],0,[[["self"],[R[1]]]]],[11,R[8],E,"Render the entire application.",0,[[["self"],["renderargs"],["event"]]]],[11,R[10],E,"Resize the application.",0,[[["self"],["u32"]]]],[11,R[11],E,"Update the application state.",0,[[["self"],[R[12]]]]],[11,"run",E,"Run the application.",0,[[["self"]]]],[0,"elements","mief","Elements of the game itself, such as the players and the…",N,N],[0,"ball",R[2],"The ball used for playing and directly associated…",N,N],[3,"Ball","mief::elements::ball",R[3],N,N],[12,"diameter",E,"The diameter of the ball.",1,N],[12,R[14],E,"The current position of the ball: `(x, y)`.",1,N],[12,"speed",E,"The current speed of the ball: `(x, y)`.",1,N],[4,R[21],E,"The current status of the ball.",N,N],[13,"LeftOnLeftSide",E,"The ball left the field on the left side.",2,N],[13,"LeftOnRightSide",E,"The ball left the field on the right side.",2,N],[13,"WithinGame",E,"The ball is still within the field.",2,N],[11,"new",E,"Create a new ball with a random speed at the center of the…",1,[[],["ball"]]],[11,R[16],E,"Change the ball's speed by the given `amount` in both…",1,[[["self"],["f64"]]]],[11,"draw",E,"Draw the ball.",1,[[["self"],["g2d"],[R[9]]]]],[11,"update",E,"Update the ball's position. `dt` is the change in time…",1,[[["self"],["u32"],["f64"]],[R[13]]]],[11,"collide_with",E,"Check if the ball will collide with `object`'s bounding…",1,[[["self"]]]],[0,"field",R[2],"The playing field of the game.",N,N],[3,"Field","mief::elements::field","The field where the game actually occurs.",N,N],[12,"ball",E,R[3],3,N],[12,"last_speed_change",E,"The Δt since the last speed change.",3,N],[12,"players",E,"The players.",3,N],[12,"height",E,"The height of the field.",3,N],[12,"width",E,"The width of the field.",3,N],[17,"SPEED_CHANGE_INTERVAL",E,"The interval at which the ball's and the players' speeds…",N,N],[17,"SPEED_CHANGE",E,"The amount by which the speeds of the ball and players are…",N,N],[11,"new",E,"Initialize a new playing field with the given size.",3,[[],["field"]]],[11,"get_player_scores",E,"Get the scores of all players.",3,[[["self"]]]],[11,R[4],E,R[5],3,[[["self"],[R[1]]]]],[11,R[6],E,R[7],3,[[["self"],[R[1]]]]],[11,R[8],E,"Draw the field with its contents.",3,[[["self"],["g2d"],[R[9]]]]],[11,R[10],E,"Resize the field.",3,[[["self"],["u32"]]]],[11,R[11],E,"Update the field state.",3,[[["self"],[R[12]]]]],[11,"update_scores",E,"If the ball left the field on the left or right side, the…",3,[[["self"],[R[13]]]]],[0,"player",R[2],"The player and directly associated structures.",N,N],[3,"Player","mief::elements::player","The player.",N,N],[12,"field_side",E,R[15],4,N],[12,R[17],E,"The current direction of movement.",4,N],[12,R[14],E,"The current position of the player: `(x, y)`.",4,N],[12,"score",E,"The points the player achieved so far.",4,N],[12,"size",E,"The size of the player's handle: `(width, height)`.",4,N],[12,"speed",E,"The current speed of the player (the player can only move…",4,N],[4,R[22],E,"The direction of the player's movement.",N,N],[13,"Down",E,"Move the handle down.",5,N],[13,"None",E,"Do not move.",5,N],[13,"Up",E,"Move the handle up.",5,N],[4,R[23],E,R[15],N,N],[13,"Left",E,"The player plays on the left side of the field.",6,N],[13,"Right",E,"The player plays on the right side of the field.",6,N],[17,"PLAYER_MARGIN",E,"The margin between the player's handle and the respective…",N,N],[17,"SPEED",E,"The player's initial speed.",N,N],[11,"get_x_position",E,"Get the x position on the field, depending on the field…",6,[[["self"],["f64"],["u32"]],["f64"]]],[11,"new",E,"Create a new player at position `(x, y)`.",4,[[["u32"],["fieldside"]],["player"]]],[11,R[16],E,"Change the player's speed by the given `amount`.",4,[[["self"],["f64"]]]],[11,"draw",E,"Draw the player.",4,[[["self"],["g2d"],[R[9]]]]],[11,"get_bounding_box",E,"Get the bounding box of the player's handle.",4,[[["self"]]]],[11,"get_score",E,"Get the player's current score.",4,[[["self"]],["isize"]]],[11,"set_movement",E,"Move the player.",4,[[["self"],[R[17]]]]],[11,"update",E,"Update the player's position.",4,[[["self"],["f64"],["u32"]]]],[11,"update_score",E,"Update the player's score with `additional_points`.",4,[[["self"],["isize"]]]],[11,"update_position",E,"Update the player's position depending on the new width of…",4,[[["self"],["u32"]]]],[0,R[18],R[2],"Display information on the current game status.",N,N],[3,R[24],"mief::elements::scoreboard","The scoreboard displays information on the game, such as…",N,N],[12,"title",E,"The name of the game.",7,N],[12,"height",E,"The height of the scoreboard.",7,N],[12,"width",E,"The width of the scoreboard.",7,N],[12,"scores",E,"The players' scores.",7,N],[4,R[25],E,"Alignment of text.",N,N],[13,"Left",E,"Align text on the left edge of the text's bounding box.",8,N],[13,"Center",E,"Align text in the center of the text's bounding box.",8,N],[13,"Right",E,"Align text on the right edge of the text's bounding box.",8,N],[11,"align",E,"Compute the x-position where the text will be drawn…",8,[[["self"],["f64"]],["f64"]]],[11,"new",E,"Initialize a new scoreboard with a given `size` (`[width,…",7,[[["str"]],[R[18]]]],[11,"determine_font_size",E,"Determine the font size based on the height of the…",7,[[["self"]],["u32"]]],[11,"draw_text",E,"Draw the given `text` aligned at `position_x` on the…",7,[[["self"],["glyphs"],[R[9]],["g2d"],["textalignment"],["str"],["f64"]]]],[11,R[8],E,"Render the scoreboard.",7,[[["self"],["g2d"],[R[9]],["glyphs"]]]],[11,R[10],E,"Resize the scoreboard.",7,[[["self"],["u32"]]]],[11,R[11],E,"Update the scoreboard.",7,[[["self"]]]],[0,"execution_flow","mief","Functions and types modifying the normal program execution…",N,N],[0,"error",R[19],"Error handling.",N,N],[4,"Error","mief::execution_flow::error","A wrapper type for all errors caused by Mief.",N,N],[13,"IO",E,"Errors caused by faulty I/O operations.",9,N],[13,"Piston",E,"Errors caused by Piston.",9,N],[6,"Result",E,"A specialized `Result` type for Mief.",N,N],[0,"exit",R[19],"Quit the application with standardized exit codes.",N,N],[4,"Code","mief::execution_flow::exit","The exit codes returned by the Mief.",N,N],[13,"Success",E,"Successful (i.e. expected) execution (Code: `0`).",10,N],[13,"PistonFailure",E,"Failure of the Piston game engine (Code: `1`).",10,N],[13,"IOFailure",E,"Failure during I/O operations (Code: `2`).",10,N],[5,"fail_from_error",E,"Quit the program execution. The exit code and message are…",N,[[["error"]]]],[5,"fail_with_message",E,"Quit the program execution with the given `exit_code` and…",N,[[["code"],["str"]]]],[5,"succeed",E,"Quit the program execution with a `Success` exit code.",N,[[]]],[5,"quit",E,"Quit the program execution with the given code.",N,[[["into",["i32"]],["i32"]]]],[0,"color","mief","Color definitions.",N,N],[17,"BLACK","mief::color","`#000000`, `100%` opacity.",N,N],[17,"GRAY",E,"`#808080`, `100%` opacity.",N,N],[17,"GREEN",E,"'#00ff00', '100%' capacity.",N,N],[17,"WHITE",E,"`#ffffff`, `100%` opacity.",N,N]],"p":[[3,R[20]],[3,"Ball"],[4,R[21]],[3,"Field"],[3,"Player"],[4,R[22]],[4,R[23]],[3,R[24]],[4,R[25]],[4,"Error"],[4,"Code"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);